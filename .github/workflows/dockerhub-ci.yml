name: Build, Scan, and Push to Docker Hub

on:
  push:
    branches: ["master", "dev"]

concurrency:
  group: dockerhub-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: text-analyzer

jobs:
  lint-and-test:
    name: Lint & Test (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install flake8 pytest

      - name: Lint
        run: |
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ --count --max-complexity=10 --max-line-length=88 --statistics

      - name: Test
        run: |
          python -m pytest -q || true  # keep optional; remove '|| true' to fail on tests

  build-and-push:
    name: Build & Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [lint-and-test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Compute image tags
        id: tags
        run: |
          REPO="${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"
          SHA_TAG="${REPO}:${{ github.sha }}"
          if [ "${GITHUB_REF##*/}" = "master" ]; then
            EXTRA_TAG="${REPO}:latest"
          else
            EXTRA_TAG="${REPO}:dev"
          fi
          echo "IMAGE_SHA=${SHA_TAG}" >> $GITHUB_ENV
          echo "IMAGE_EXTRA=${EXTRA_TAG}" >> $GITHUB_ENV
          printf "%s\n%s\n" "$SHA_TAG" "$EXTRA_TAG"

      - name: Build & Push (with cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_SHA }}
            ${{ env.IMAGE_EXTRA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Output pushed image
        run: |
          echo "Pushed:"
          echo " - ${{ env.IMAGE_SHA }}"
          echo " - ${{ env.IMAGE_EXTRA }}"

  security-scan:
    name: Trivy Scan (blocking)
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Log in to Docker Hub (for rate limits)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Trivy scan pushed image (SHA tag)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_SHA }}
          format: 'table'
          exit-code: '1'          # fail the job on HIGH/CRITICAL by default
          ignore-unfixed: true
    env:
      IMAGE_SHA: ${{ needs.build-and-push.outputs.IMAGE_SHA }}

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.7.0

        - name: Authenticate with GCP
          uses: google-github-actions/auth@v2
          with:
            credentials_json: ${{ secrets.GCP_CREDENTIALS }}

        - name: Set up gcloud
          uses: google-github-actions/setup-gcloud@v2
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}

        - name: Init & Apply Terraform
          working-directory: infra   # <- put your Terraform dir here
          run: |
            terraform init -input=false
            terraform apply -auto-approve -input=false \
              -var "image=${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}"